//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Github) DeepCopyInto(out *Github) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Github.
func (in *Github) DeepCopy() *Github {
	if in == nil {
		return nil
	}
	out := new(Github)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Github) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubInitParameters) DeepCopyInto(out *GithubInitParameters) {
	*out = *in
	if in.AutoLinking != nil {
		in, out := &in.AutoLinking, &out.AutoLinking
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.IsAutoCreation != nil {
		in, out := &in.IsAutoCreation, &out.IsAutoCreation
		*out = new(bool)
		**out = **in
	}
	if in.IsAutoUpdate != nil {
		in, out := &in.IsAutoUpdate, &out.IsAutoUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsCreationAllowed != nil {
		in, out := &in.IsCreationAllowed, &out.IsCreationAllowed
		*out = new(bool)
		**out = **in
	}
	if in.IsLinkingAllowed != nil {
		in, out := &in.IsLinkingAllowed, &out.IsLinkingAllowed
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubInitParameters.
func (in *GithubInitParameters) DeepCopy() *GithubInitParameters {
	if in == nil {
		return nil
	}
	out := new(GithubInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubList) DeepCopyInto(out *GithubList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Github, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubList.
func (in *GithubList) DeepCopy() *GithubList {
	if in == nil {
		return nil
	}
	out := new(GithubList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GithubList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubObservation) DeepCopyInto(out *GithubObservation) {
	*out = *in
	if in.AutoLinking != nil {
		in, out := &in.AutoLinking, &out.AutoLinking
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsAutoCreation != nil {
		in, out := &in.IsAutoCreation, &out.IsAutoCreation
		*out = new(bool)
		**out = **in
	}
	if in.IsAutoUpdate != nil {
		in, out := &in.IsAutoUpdate, &out.IsAutoUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsCreationAllowed != nil {
		in, out := &in.IsCreationAllowed, &out.IsCreationAllowed
		*out = new(bool)
		**out = **in
	}
	if in.IsLinkingAllowed != nil {
		in, out := &in.IsLinkingAllowed, &out.IsLinkingAllowed
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubObservation.
func (in *GithubObservation) DeepCopy() *GithubObservation {
	if in == nil {
		return nil
	}
	out := new(GithubObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubParameters) DeepCopyInto(out *GithubParameters) {
	*out = *in
	if in.AutoLinking != nil {
		in, out := &in.AutoLinking, &out.AutoLinking
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	out.ClientSecretSecretRef = in.ClientSecretSecretRef
	if in.IsAutoCreation != nil {
		in, out := &in.IsAutoCreation, &out.IsAutoCreation
		*out = new(bool)
		**out = **in
	}
	if in.IsAutoUpdate != nil {
		in, out := &in.IsAutoUpdate, &out.IsAutoUpdate
		*out = new(bool)
		**out = **in
	}
	if in.IsCreationAllowed != nil {
		in, out := &in.IsCreationAllowed, &out.IsCreationAllowed
		*out = new(bool)
		**out = **in
	}
	if in.IsLinkingAllowed != nil {
		in, out := &in.IsLinkingAllowed, &out.IsLinkingAllowed
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubParameters.
func (in *GithubParameters) DeepCopy() *GithubParameters {
	if in == nil {
		return nil
	}
	out := new(GithubParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubSpec) DeepCopyInto(out *GithubSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubSpec.
func (in *GithubSpec) DeepCopy() *GithubSpec {
	if in == nil {
		return nil
	}
	out := new(GithubSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubStatus) DeepCopyInto(out *GithubStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubStatus.
func (in *GithubStatus) DeepCopy() *GithubStatus {
	if in == nil {
		return nil
	}
	out := new(GithubStatus)
	in.DeepCopyInto(out)
	return out
}
